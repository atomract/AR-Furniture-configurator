/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Table.glb 
Created: Tue Jun 20 12:20:48 2023
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { useCustomization } from '../contexts/Context';
import woodN from '../../assets/textures/Wood/Wood_025_normal.jpg';
import woodAO from '../../assets/textures/Wood/Wood_025_ambientOcclusion.jpg';
import woodR from '../../assets/textures/Wood/Wood_025_roughness.jpg';
import marbleR from '../../assets/textures/Marble/Marble_White_006_roughness.jpg';
import marbleAO from '../../assets/textures/Marble/Marble_White_006_ambientOcclusion.jpg';
import marbleN from '../../assets/textures/Marble/Marble_White_006_normal.jpg';
import fabricR from '../../assets/textures/Fabric/Fabric_R.jpg';
import fabricAO from '../../assets/textures/Fabric/Fabric_AO.jpg';
import fabricN from '../../assets/textures/Fabric/Fabric_N.jpg';

import * as THREE from "three";
import { useXR } from '@react-three/xr';

export function Model(props) {
  const { nodes, materials } = useGLTF('/Table.glb')
  const {  tableColor, legsColor, material } = useCustomization();
  const { isPresenting } = useXR()

  const woodTexture = useTexture({
    normalMap: woodN,
    roughnessMap: woodR,
    aoMap: woodAO,
  })

  woodTexture.normalMap.repeat.set(1, 1);
  woodTexture.roughnessMap.repeat.set(1, 1);
  woodTexture.aoMap.repeat.set(1, 1);
  woodTexture.normalMap.wrapS = woodTexture.normalMap.wrapT =
    THREE.MirroredRepeatWrapping;
  woodTexture.roughnessMap.wrapS =
    woodTexture.roughnessMap.wrapT = THREE.MirroredRepeatWrapping;
  woodTexture.aoMap.wrapS = woodTexture.aoMap.wrapT =
    THREE.RepeatWrapping;

    const marbleTexture = useTexture({
      normalMap: marbleN,
      roughnessMap: marbleR,
      aoMap: marbleAO,
    })

    marbleTexture.normalMap.repeat.set(1, 1);
    marbleTexture.roughnessMap.repeat.set(1, 1);
    marbleTexture.aoMap.repeat.set(1, 1);
    marbleTexture.normalMap.wrapS = marbleTexture.normalMap.wrapT =
      THREE.MirroredRepeatWrapping;
    marbleTexture.roughnessMap.wrapS =
      marbleTexture.roughnessMap.wrapT = THREE.MirroredRepeatWrapping;
    marbleTexture.aoMap.wrapS = marbleTexture.aoMap.wrapT =
      THREE.RepeatWrapping;
  

      const fabricTexture = useTexture({
        normalMap: fabricN,
        roughnessMap: fabricR,
        aoMap: fabricAO,
      })
  
      fabricTexture.normalMap.repeat.set(1, 1);
      fabricTexture.roughnessMap.repeat.set(1, 1);
      fabricTexture.aoMap.repeat.set(1, 1);
      fabricTexture.normalMap.wrapS = fabricTexture.normalMap.wrapT =
        THREE.MirroredRepeatWrapping;
      fabricTexture.roughnessMap.wrapS =
        fabricTexture.roughnessMap.wrapT = THREE.MirroredRepeatWrapping;
      fabricTexture.aoMap.wrapS = fabricTexture.aoMap.wrapT =
        THREE.RepeatWrapping;
    



  return (
    <group scale={isPresenting ? 1.1 : 0.84} position={isPresenting ? [0,-4.2,-3.2] : [0,-0.38,0]} rotation={isPresenting ? [0,0,0] : [Math.PI/5,0,0]} {...props} dispose={null}>
      <mesh geometry={nodes['Furniture_Tables_Lundbergs-Mobler_Table-Stay-XL005_1'].geometry} material={materials['Plywood sides']} />
      <mesh geometry={nodes['Furniture_Tables_Lundbergs-Mobler_Table-Stay-XL005_2'].geometry} >
      <meshPhysicalMaterial 
      color={tableColor.color} 
          {...(material === "wood"
          ? woodTexture
          : material === "marble" ? marbleTexture 
          : material === "fabric" ? fabricTexture 
          : woodTexture)}
      />
      </mesh>
      <mesh geometry={nodes['Furniture_Tables_Lundbergs-Mobler_Table-Stay-XL005_3'].geometry} >
      <meshPhysicalMaterial color={legsColor.color} />
      </mesh>
      <mesh geometry={nodes['Furniture_Tables_Lundbergs-Mobler_Table-Stay-XL005_4'].geometry}
      >
      <meshPhysicalMaterial color={legsColor.color} />

      </mesh>
        
      <mesh geometry={nodes['Furniture_Tables_Lundbergs-Mobler_Table-Stay-XL005_5'].geometry} >
      <meshPhysicalMaterial color={tableColor.color}
        {...(material === "wood"
        ? woodTexture
        : material === "marble" ? marbleTexture 
        : material === "fabric" ? fabricTexture 

        : woodTexture)}
      />
      </mesh>
    </group>
  )
}

useGLTF.preload('/Table.glb')
